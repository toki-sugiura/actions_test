name: Create release tag and release note.

on:
  push:
    branches:
      - main

jobs:
  create-release-tag:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.ACTIONS_SECRET }}
      TZ: 'Asia/Tokyo'

    steps:
      - uses: actions/checkout@v4

      # 前回のりリースタグを取得する
      - name: Get previous tag
        id: pre_tag
        run: |
          echo "current_version=$(curl https://api.github.com/repos/${{ github.repository }}/releases -s -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' -H 'Accept: application/vnd.github.v3+json'| jq -r '.[] | select(.target_commitish == "develop") | .tag_name' | head -1)" >> $GITHUB_OUTPUT
          echo "labels=$(gh pr view ${{ github.event.pull_request.number }} --json labels --jq '.labels[]?.name' | tr '\n' ',')" >> $GITHUB_OUTPUT

      # タグを生成する 「vx.x.x」
      - name: Generate release tag
        id: release_tag
        run: |
          echo "================"
          echo ${{ steps.pre_tag.outputs.current_version }}
          echo ${{ steps.pre_tag.outputs.labels }}
          echo "================"

          # major=$(echo ${{ steps.pre_tag.outputs.current_version }} | sed -r "s/^.*([0-9]+)\.([0-9]+)\.([0-9]+)$/\1/")
          # minor=$(echo ${{ steps.pre_tag.outputs.current_version }} | sed -r "s/^.*([0-9]+)\.([0-9]+)\.([0-9]+)$/\2/")
          # patch=$(echo ${{ steps.pre_tag.outputs.current_version }} | sed -r "s/^.*([0-9]+)\.([0-9]+)\.([0-9]+)$/\3/")
          # if [ `echo "${{ steps.pre_tag.outputs.labels }}" | grep "Patch"` ]; then
          #   patch=$(expr ${patch} + 1)
          # elif [ `echo "${{ steps.pre_tag.outputs.labels }}" | grep "Minor"` ]; then
          #   minor=$(expr ${minor} + 1)
          #   patch=0
          # elif [ `echo "${{ steps.pre_tag.outputs.labels }}" | grep "Major"` ]; then
          #   major=$(expr ${major} + 1)
          #   minor=0
          #   patch=0
          # else
          #   patch=$(expr ${patch} + 1)
          # fi
          # new_version="v${major}.${minor}.${patch}"
          # echo "================"
          # echo ${{ steps.pre_tag.outputs.current_version }}
          # echo ${{ github.event.pull_request.labels.*.name}}
          # echo ${{ steps.pre_tag.outputs.labels }}
          # echo "================"
          # echo "release_tag=${new_version}" >> $GITHUB_OUTPUT
